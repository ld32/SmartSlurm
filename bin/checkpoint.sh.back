#!/bin/sh

set -x 

usage(){            #           1                    2             3              4             5
    echo "checkpoint.sh <one or more commands> <unique name> <total memory> <total time> <extra memory>"
    exit 1
}

CGROUP_PATH=/sys/fs/cgroup/memory/slurm/uid_$UID/job_$SLURM_JOB_ID

export program="$1"

flag=$2

[ -z "$5" ] && usage

[ -f log/$flag.adjust ] && totalM=`cat log/$flag.adjust | cut -d' ' -f1` || totalM=$3

[ -f log/$flag.adjust ] && totalT=`cat log/$flag.adjust | cut -d' ' -f2` || totalT=$4

[ -f log/$flag.adjust ] && extraM=`cat log/$flag.adjust | cut -d' ' -f3` || extraM=$5

totalM=$((totalM * 1024 * 1024))

extraM=$((extraM * 1024 * 1024 * 2))

checkpointDir="log/$flag"

mkdir -p $checkpointDir

portfile=port.$SLURM_JOBID                                                                 # to store port number

dmtcp_coordinator --daemon --exit-on-last -p 0 --port-file $portfile # 1>/dev/null 2>&1   # start coordinater

hostname=`hostname`                                                                            # get coordinator's host name

port=`cat $portfile`                                                                          # get coordinator's port number

export DMTCP_COORD_HOST=$hostname                                                  # save coordinators host info in an environment variable

export DMTCP_COORD_PORT=$port                                                  # save coordinators port info in an environment variable

rm $portfile

#export CKPT_WAIT_SEC=18

START=`date +%s`

waitForIt() {
    sleep 10

    if dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT -s; then  #1>/dev/null 2>&1

        CURRENT_MEMORY_USAGE=$(grep 'total_rss ' $CGROUP_PATH/memory.stat | cut -d' ' -f2)

        #srunM=`sort -n log/job_$SLURM_JOBID.mem.txt | tail -n1 | cut -d' ' -f2`

        # less than two times of extraM or 5 minutes left
        if [ $(( totalM - CURRENT_MEMORY_USAGE )) -lt $extraM ] || [ $(( totalT * 60 - $(date +%s) + START )) -lt 300 ]; then   
            rm -r $checkpointDir/ckpt_*.dmtcp dmtcp_restart_script*
            dmtcp_command --ckptdir $checkpointDir -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --ckpt-open-files --bcheckpoint
            #dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --quit   
        fi
    else 
        touch log/$flag.success
    fi    
}    
    
if ! ls $checkpointDir/ckpt_*.dmtcp >/dev/null 2>&1; then                  
    dmtcp_launch --ckptdir $checkpointDir -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT  $program &

    #waitForIt

    #sleep $CKPT_WAIT_SEC

    #dmtcp_command --ckptdir $checkpointDir -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --ckpt-open-files --bcheckpoint

    #dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --quit

else
    dmtcp_restart -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT  $checkpointDir/ckpt_*.dmtcp  &
    
    #sleep 5
    #waitForIt
    rm -r $checkpointDir/ckpt_*.dmtcp dmtcp_restart_script*
    #sleep $CKPT_WAIT_SEC
    #if dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT -s 1>/dev/null 2>&1; then   
    #    rm -r $checkpointDir/ckpt_*.dmtcp dmtcp_restart_script*
    #    dmtcp_command --ckptdir $checkpointDir -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --ckpt-open-files --bcheckpoint
    #    dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --quit
    #else
    #    echo "job finished"
    #fi
fi

#sleep 10

while true; do
    

#while dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT -s; do  #1>/dev/null 2>&1
 #   sleep 10
#whilee    if ! ls $checkpointDir/ckpt_*.dmtcp >/dev/null 2>&1; then 
            
        CURRENT_MEMORY_USAGE=$(grep 'total_rss ' $CGROUP_PATH/memory.stat | cut -d' ' -f2)

        #srunM=`sort -n log/job_$SLURM_JOBID.mem.txt | tail -n1 | cut -d' ' -f2`
        timeR=$(($(date +%s) - START))
        #less than two times of extraM or 5 minutes left
        if [ $(( totalM - CURRENT_MEMORY_USAGE )) -lt $extraM ] || [ $(( totalT * 60 - $timeR )) -lt 300 ] && [ $timeR -gt 60 ]; then   
            #rm -r $checkpointDir/ckpt_*.dmtcp dmtcp_restart_script*
            if dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT -s; then 
                dmtcp_command --ckptdir $checkpointDir -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --ckpt-open-files --bcheckpoint
                #break
            fi
            break 
                
        #dmtcp_command -h $DMTCP_COORD_HOST -p $DMTCP_COORD_PORT --quit   
        fi
#    fi
    sleep 10    
done

wait 

touch log/$flag.success
      